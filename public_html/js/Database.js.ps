var DEFAULT_GROUP = "<primary>";
var GROUPS = "groups";
var NEXT_KEY = "nextKey";
var TASKS = "tasks_";
var t;
var database = {
    items: {},
    groups: {},
    nextKey: 0
};

database.init = function () {

    if (!localStorage.hasObject (GROUPS) || localStorage.getObject (GROUPS).length === 0) {
        localStorage.setObject (GROUPS, {"0": DEFAULT_GROUP});
        localStorage.setObject (TASKS + this.nextKey, []);
        localStorage.setItem (NEXT_KEY, this.nextKey);
    }

    this.nextKey = localStorage.getItem (NEXT_KEY);
    this.groups = localStorage.getObject (GROUPS);
    this.items = {};
    for (var p in this.groups) {
        this.items[p] = this.getTasks (p);
    }
};

database.saveKey = function () {
    localStorage.setItem (NEXT_KEY, this.nextKey);
};
database.getGroups = function () {
    return localStorage.getObject (GROUPS);
};
database.setGroups = function (groups) {
    localStorage.setObject (GROUPS, groups);
};
database.getTasks = function (groupID) {
    return localStorage.getObject (TASKS + groupID);
};
database.setTasks = function (groupID, tasks) {
    localStorage.setObject (TASKS + groupID, tasks);
    console.log (TASKS + groupID);
};






database.addGroup = function (group) {
    this.nextKey++;
    var groups = this.getGroups ();
    groups[this.nextKey] = group;
    this.setGroups (groups);
    this.setTasks (this.nextKey, []);
    this.saveKey ();
    this.init ();
};
database.deleteGroup = function (groupID) {
    var groups = this.getGroups ();
    delete groups[groupID];
    this.setGroups (groups);
    this.init ();
};
database.editGroup = function (groupID, group) {
    var groups = this.getGroups ();
    groups[groupID] = group;
    this.setGroups (groups);
    this.init ();
};




database.addTask = function (groupID, task) {
    var tasks = this.getTasks (groupID);
    tasks.push (task);
    this.setTasks (groupID, tasks);
};
database.deleteTask = function (groupID, taskID) {
    var tasks = this.getTasks (groupID);
    tasks.splice (taskID, 1);
    this.setTasks (tasks);
    this.init ();
};
database.editTask = function (groupID, taskID, task) {
    var tasks = this.getTasks (groupID);
    tasks[taskID] = task;
    this.setTasks (tasks);
    this.init ();
};
database.getTask = function (groupID, taskID) {
    return this.getTasks (groupID)[taskID];
};

















window.onload = function (e) {
    console.log (document.readyState);

    database.init ();
};